@page "/fetchdata"

@using BookListLibrary.Data
@using BookListLibrary.Services
@inject BookListService BookListService

@inject NavigationManager NavigationManager

<PageTitle>Book List</PageTitle>

<h1>Book List</h1>
<p>This component demonstrates fetching data from a service.</p>
@if (books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Genre</th>
                <th>Description</th>
                <th>Actions</th> <!-- Add this line -->
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Genre</td>
                    <td>@book.Description</td>
                    <td class="edit-button" @onclick="() => Edit(book.Id,book.Title,book.Author, book.Genre, book.Description)">Edit</td>
                    <!--<td class="delete-button" @onclick="() => Delete(book.Id)">Delete</td>-->
                </tr>
            }
        </tbody>

    </table>
    <style>
        .edit-button {
            background-color: green;
            color: green;
            padding: 8px 16px;
            border: double;
            background-color:green;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>


}

@code {
    private List<BookList> books;
    private BookList book;

    public async Task Edit(int Id, string Title, string Author, string Genre, string Description)
    {
        NavigationManager.NavigateTo($"/addnewbook/{Id}/{Title}/{Author}/{Genre}/{Description}");

    }

    private async Task Delete(int Id)
    {
        try
        {
            await BookListService.DeleteBookAsync(Id);
            NavigationManager.NavigateTo("/fetchdata");
        }

        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        books = await BookListService.GetAllBooksAsync();
    }
}