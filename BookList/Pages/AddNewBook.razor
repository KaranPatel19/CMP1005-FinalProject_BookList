@page "/addnewbook"
@using BookListLibrary.Data
@using BookListLibrary.Services
@using BookListLibrary.Exceptions
@inject BookListService BookListService
@inject NavigationManager NavigationManager

<PageTitle>Add New Book</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h1 class="mb-4 text-center">Add New Book To Your WishList</h1>
            @if (errorMessage != null)
            {
                <div class="alert alert-danger">
                    @errorMessage
                </div>
            }
            <form>
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" class="form-control" id="title" @bind-value="newBook.Title">
                </div>
                <div class="form-group">
                    <label for="author">Author</label>
                    <input type="text" class="form-control" id="author" @bind-value="newBook.Author">
                </div>
                <div class="form-group">
                    <label for="genre">Genre</label>
                    <input type="text" class="form-control" id="genre" @bind-value="newBook.Genre">
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <input type="text" class="form-control" id="description" @bind-value="newBook.Description">
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary mt-3" @onclick="AddBook">Add Book</button>
                    <button type="button" class="btn btn-secondary mt-3 ml-2" @onclick="ViewWishList">View WishList</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    label {
        font-weight: bold;
    }
</style>

@code {
    private BookList newBook = new BookList();
    private string errorMessage;

    private async Task AddBook()
    {
        try
        {
            await BookListService.AddBookAsync(newBook);
            NavigationManager.NavigateTo("/booklist");
        }
        catch (BookValidationException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
    private void ViewWishList()
    {
        NavigationManager.NavigateTo("/fetchdata");
    }




}
